from telegram import Update
from telegram.ext import ContextTypes, MessageHandler, filters
from database.database import SessionLocal
from database.crud import get_user, update_executor_status

async def toggle_executor_status(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ú–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è (–≤—ã—à–µ–ª –Ω–∞ –ª–∏–Ω–∏—é/—É—à–µ–ª —Å –ª–∏–Ω–∏–∏)."""
    user_id = update.message.from_user.id
    db = SessionLocal()
    user = get_user(db, user_id)

    if not user or user.user_type != "–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å":
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º.")
        db.close()
        return

    new_status = not user.is_online
    update_executor_status(db, user.id, new_status)
    db.close()

    status_text = "üü¢ –í—ã –≤—ã—à–ª–∏ –Ω–∞ –ª–∏–Ω–∏—é! –¢–µ–ø–µ—Ä—å –∑–∞–∫–∞–∑—á–∏–∫–∏ –º–æ–≥—É—Ç –≤—ã–±—Ä–∞—Ç—å –≤–∞—Å." if new_status else "üî¥ –í—ã —É—à–ª–∏ —Å –ª–∏–Ω–∏–∏."
    await update.message.reply_text(status_text)

def register(application):
    application.add_handler(MessageHandler(filters.Regex("^‚úÖ –í—ã–π—Ç–∏ –Ω–∞ –ª–∏–Ω–∏—é$"), toggle_executor_status))
